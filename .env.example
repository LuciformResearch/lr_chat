# =============================================================================
# ü¶ä LR Hub‚Ñ¢ - Configuration d'environnement
# =============================================================================
# Copiez ce fichier vers .env et remplissez les valeurs
# cp .env.example .env

# =============================================================================
# üóÑÔ∏è BASE DE DONN√âES (OBLIGATOIRE)
# =============================================================================

# URL de connexion PostgreSQL avec pgvector
# Format: postgresql://user:password@host:port/database
DATABASE_URL="postgresql://lucie:your_strong_password_here@localhost:5433/lr_chat_db"

# Configuration Docker (si vous utilisez docker-compose)
POSTGRES_DB=lr_chat_db
POSTGRES_USER=lucie
POSTGRES_PASSWORD=your_strong_password_here
POSTGRES_PORT=5433

# =============================================================================
# üåê APPLICATION (OBLIGATOIRE)
# =============================================================================

# URL de votre application (changez en production)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Cl√© secr√®te JWT pour l'authentification (g√©n√©rez une cl√© forte)
JWT_SECRET=your_jwt_secret_here_change_this_in_production

# Cl√© de chiffrement pour les donn√©es sensibles (cl√©s API)
ENCRYPTION_SECRET_KEY=your_encryption_secret_key_here

# =============================================================================
# üìß EMAIL (OBLIGATOIRE pour l'inscription)
# =============================================================================

# Option 1: OAuth2 Google (RECOMMAND√â - professionnel)
EMAIL_PROVIDER=oauth2
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here
GOOGLE_REFRESH_TOKEN=your_google_refresh_token_here
GOOGLE_EMAIL=your_email@gmail.com

# Option 2: SendGrid (alternative)
# EMAIL_PROVIDER=sendgrid
# SENDGRID_API_KEY=your_sendgrid_api_key_here
# FROM_EMAIL=noreply@yourdomain.com
# FROM_NAME=LR Hub

# =============================================================================
# ü§ñ INTELLIGENCE ARTIFICIELLE (OPTIONNEL)
# =============================================================================

# Google Gemini (pour les fonctionnalit√©s IA avanc√©es)
GEMINI_API_KEY=your_gemini_api_key_here

# OpenAI (alternative √† Gemini)
OPENAI_API_KEY=your_openai_api_key_here

# Ollama (pour IA locale - optionnel)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_HOST=http://localhost:11434

# =============================================================================
# üîß D√âVELOPPEMENT & DEBUG (OPTIONNEL)
# =============================================================================

# Environnement
NODE_ENV=development

# Debug et verbosit√©
DEBUG_SEMANTIC=1
DEBUG_ARCHIVIST=1
ARCHIVIST_VERBOSE=detailed
ORCHESTRATOR_DEBUG_MODE=true
DEBUG_HIERARCHICAL_MEMORY=true

# =============================================================================
# üöÄ PRODUCTION (√† configurer pour le d√©ploiement)
# =============================================================================

# Pour Vercel, configurez ces variables dans le dashboard :
# - NEXT_PUBLIC_APP_URL=https://yourdomain.com
# - DATABASE_URL=votre_url_de_production
# - JWT_SECRET=cl√©_forte_g√©n√©r√©e
# - ENCRYPTION_SECRET_KEY=cl√©_de_chiffrement
# - GEMINI_API_KEY=votre_cl√©_gemini
# - GOOGLE_CLIENT_ID=votre_client_id
# - GOOGLE_CLIENT_SECRET=votre_client_secret
# - GOOGLE_REFRESH_TOKEN=votre_refresh_token
# - GOOGLE_EMAIL=votre_email
# - EMAIL_PROVIDER=oauth2

# =============================================================================
# üìö INSTRUCTIONS DE SETUP
# =============================================================================

# 1. Base de donn√©es PostgreSQL + pgvector :
#    - Option A: Docker (recommand√©)
#      docker-compose up -d
#    - Option B: Installation locale
#      sudo apt install postgresql postgresql-15-pgvector
#      sudo -u postgres psql -c "CREATE DATABASE lr_chat_db;"
#      sudo -u postgres psql -c "CREATE USER lucie WITH PASSWORD 'password';"
#      psql -U lucie -d lr_chat_db -c "CREATE EXTENSION vector;"

# 2. Variables obligatoires √† remplir :
#    - DATABASE_URL
#    - NEXT_PUBLIC_APP_URL
#    - JWT_SECRET (g√©n√©rez avec: openssl rand -base64 32)
#    - ENCRYPTION_SECRET_KEY (g√©n√©rez avec: openssl rand -hex 32)
#    - EMAIL_PROVIDER + variables Google OAuth

# 3. Variables optionnelles :
#    - GEMINI_API_KEY (pour les fonctionnalit√©s IA)
#    - Variables de debug (pour le d√©veloppement)

# 4. Lancer l'application :
#    npm install
#    npm run dev